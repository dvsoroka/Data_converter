"""
Django settings for data_converter project.

Generated by 'django-admin startproject' using Django 2.0.9.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

from data_converter.settings_local import *
from django.utils.translation import ugettext_lazy as _

DEBUG_TOOLBAR = locals().get('DEBUG_TOOLBAR', False)

# Application definition

INSTALLED_APPS = [
    'data_ocean.apps.DataOceanConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django.contrib.sites',
    'django_celery_beat',
    'django_extensions',
    'django_filters',
    'drf_yasg',
    'rangefilter',  # plugin for django admin
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_xml',
    'rest_auth',
    # 'rest_auth.registration',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'raven.contrib.django.raven_compat',

    'users',
    'simple_history',
    'business_register',
    'location_register',
    'stats',
    'payment_system',
    'corrupt_person_register'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'stats.middleware.ApiUsageMiddleware',
    'payment_system.middleware.ProjectAuthenticationMiddleware',
]

if DEBUG_TOOLBAR:
    INSTALLED_APPS += ['debug_toolbar']
    MIDDLEWARE += ['debug_toolbar.middleware.DebugToolbarMiddleware']

INTERNAL_IPS = [
    '127.0.0.1',
]

# CORS_URLS_REGEX = r'^/api/.*$'
# CORS_ALLOW_CREDENTIALS = True
# SESSION_COOKIE_SAMESITE = None
# SESSION_COOKIE_SECURE = True


ROOT_URLCONF = 'data_converter.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
            ],
        },
    },
]

WSGI_APPLICATION = 'data_converter.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'uk'

LANGUAGES = [
    ('uk', _('Ukrainian')),
    ('en', _('English')),
]

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOCALE_PATHS = [
    os.path.join(BASE_DIR, "locale"),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

AUTH_USER_MODEL = 'users.DataOceanUser'
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'data_converter.pagination.CustomPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.AllowAny',
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework_xml.renderers.XMLRenderer',
    ],
    'EXCEPTION_HANDLER': 'data_converter.drf_exc_handler.exception_handler',
}

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        "API key": {
            "type": "apiKey",
            "name": "Authorization: DataOcean <project_key>",
            "in": "header",
            "description": (
                "You will find an access token in your profile. In order to access the API, you need to add a regular title"
                f" called<br/>'Authorization' meaning 'DataOcean {{token}}' to your HTTPS to {BACKEND_SITE_URL}/api/"
                " {name of register}<br/> request by substituting your token.<br/>Final title:<br/><b>Authorization: DataOcean "
                "94c6d542af1c4c4942e51df6—Å4d47fbd12fb3dea</b><br/> Example with curl:<br/><b>curl -X GET -H 'Authorization: "
                f"DataOcean {{token}}' {BACKEND_SITE_URL}/api/ {{name of register}}</b>"
            ),
        },
    },
    'DEFAULT_PAGINATOR_INSPECTORS': [
        'data_converter.drf_yasg_inspectors.DODjangoRestResponsePagination',
        'drf_yasg.inspectors.CoreAPICompatInspector',
    ],
    'DEFAULT_FILTER_INSPECTORS': [
        'data_converter.drf_yasg_inspectors.DjangoFilterDescriptionInspector',
    ],
    'DEFAULT_AUTO_SCHEMA_CLASS': 'data_ocean.views.DOAutoSchemaClass',
}

SITE_ID = 1

# Settings for social authentication
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_LOGOUT_REDIRECT_URL = '/'

# Settings for rest-auth
OLD_PASSWORD_FIELD_ENABLED = True
LOGOUT_ON_PASSWORD_CHANGE = False
LOGIN_REDIRECT_URL = '/'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

REST_AUTH_REGISTER_SERIALIZERS = {
    'REGISTER_SERIALIZER': 'users.serializers.CustomRegisterSerializer',
}

REST_AUTH_SERIALIZERS = {
    'LOGIN_SERIALIZER': 'users.serializers.CustomLoginSerializer',
    'TOKEN_SERIALIZER': 'users.serializers.TokenSerializer',
    'USER_DETAILS_SERIALIZER': 'users.serializers.DataOceanUserSerializer',
    'PASSWORD_RESET_SERIALIZER': 'users.serializers.CustomPasswordResetSerializer',
}

CACHE_MIDDLEWARE_SECONDS = 60 * 60 * 24  # 24 hours

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'cache-control',
    'postman-token',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

STATS_API_USAGE_REFERER_BLACKLIST = [
    'dataocean.us',
    'ipa.dataocean.us',
    'dp.dataocean.us',

    'dataocean.ml',
    'dataocean-ipa.ml',
    'dataocean-dp.ml',

    'localhost',
]

NAMESPACES_FOR_CLIENTS = [
    'registers',
]

# PAYMENT SYSTEM CONSTANTS ==================
DEFAULT_SUBSCRIPTION_NAME = 'Freemium'

DEFAULT_PROJECT_NAME = 'Default project'
DEFAULT_PROJECT_DESCRIPTION = 'This is auto created default project'

# PROJECT_TOKEN_KEYWORD - its a token prefix, example:
# Authorization: DataOcean <project_token>
PROJECT_PLATFORM_TOKEN_KEYWORD = 'Platform'
PROJECT_TOKEN_KEYWORD = 'DataOcean'

OVERDUE_INVOICE_DATE_INCREASE = 10  # days

# DATASET`S CONSTANTS ==================
PEP_REGISTER_LIST = '/api/pep/'
FOP_REGISTER_LIST = '/api/fop/'
KVED_REGISTER_LIST = '/api/kved/'
UKR_COMPANY_REGISTER_LIST = '/api/company/ukr/'
UK_COMPANY_REGISTER_LIST = '/api/company/uk/'
DRVBUILDING_REGISTER_LIST = '/api/drvbuilding/'
